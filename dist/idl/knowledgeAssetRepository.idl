module org {
module omg {
module spec {
module api4kp {
module _20200801 {
module id {
struct Lexicon {
    string referentid;
};
typedef sequence<Lexicon> LexiconList;
struct Pointer {
    string description;
    string href;
    string type;
    string mimetype;
};
typedef sequence<Pointer> PointerList;
struct KnowledgeRepresentationLanguageProfile {
    string referentid;
};
typedef sequence<KnowledgeRepresentationLanguageProfile> KnowledgeRepresentationLanguageProfileList;
struct KnowledgeRepresentationLanguageRole {
    string referentid;
};
typedef sequence<KnowledgeRepresentationLanguageRole> KnowledgeRepresentationLanguageRoleList;
struct KnowledgeAssetCategory {
    string referentid;
};
typedef sequence<KnowledgeAssetCategory> KnowledgeAssetCategoryList;
struct ResourceIdentifier {
    string uuid;
    string resourceid;
    string versionid;
    string tag;
    string versiontag;
    string name;
    string namespaceuri;
    string establishedon;
};
typedef sequence<ResourceIdentifier> ResourceIdentifierList;
struct SerializationFormat {
    string referentid;
};
typedef sequence<SerializationFormat> SerializationFormatList;
struct Language {
    string referentid;
};
typedef sequence<Language> LanguageList;
struct KnowledgeProcessingTechnique {
    string referentid;
};
typedef sequence<KnowledgeProcessingTechnique> KnowledgeProcessingTechniqueList;
struct ParsingLevel {
    string referentid;
};
typedef sequence<ParsingLevel> ParsingLevelList;
struct KnowledgeRepresentationLanguage {
    string referentid;
};
typedef sequence<KnowledgeRepresentationLanguage> KnowledgeRepresentationLanguageList;
struct PublicationStatus {
    string referentid;
};
typedef sequence<PublicationStatus> PublicationStatusList;
struct SummarizationType {
    string referentid;
};
typedef sequence<SummarizationType> SummarizationTypeList;
struct KnowledgeRepresentationLanguageSerialization {
    string referentid;
};
typedef sequence<KnowledgeRepresentationLanguageSerialization> KnowledgeRepresentationLanguageSerializationList;
struct ConceptIdentifier {
    string referentid;
};
typedef sequence<ConceptIdentifier> ConceptIdentifierList;
struct KnowledgeAssetType {
    string referentid;
};
typedef sequence<KnowledgeAssetType> KnowledgeAssetTypeList;
struct KnowledgeArtifactCategory {
    string referentid;
};
typedef sequence<KnowledgeArtifactCategory> KnowledgeArtifactCategoryList;
struct KnowledgeAssetRole {
    string referentid;
};
typedef sequence<KnowledgeAssetRole> KnowledgeAssetRoleList;
}; // id
module datatypes {
struct Bindings {
    string entries;
};
typedef sequence<Bindings> BindingsList;
}; // datatypes
module services {
struct SyntacticRepresentation {
    ::org::omg::spec::api4kp::_20200801::id::KnowledgeRepresentationLanguage language;
    ::org::omg::spec::api4kp::_20200801::id::KnowledgeRepresentationLanguageProfile profile;
    ::org::omg::spec::api4kp::_20200801::id::SerializationFormat format;
    sequence<::org::omg::spec::api4kp::_20200801::id::Lexicon> lexicon;
    ::org::omg::spec::api4kp::_20200801::id::Language locale;
    ::org::omg::spec::api4kp::_20200801::id::KnowledgeRepresentationLanguageSerialization serialization;
    ::org::omg::spec::api4kp::_20200801::id::KnowledgeRepresentationLanguageRole role;
    sequence<::org::omg::spec::api4kp::_20200801::services::SyntacticRepresentation> sublanguage;
    string charset;
    string encoding;
    string logic;
    string complexity;
};
typedef sequence<SyntacticRepresentation> SyntacticRepresentationList;
struct KnowledgeCarrier {
    ::org::omg::spec::api4kp::_20200801::id::ResourceIdentifier artifactid;
    ::org::omg::spec::api4kp::_20200801::id::ParsingLevel level;
    ::org::omg::spec::api4kp::_20200801::id::ResourceIdentifier assetid;
    ::org::omg::spec::api4kp::_20200801::services::SyntacticRepresentation representation;
    string href;
    string label;
};
typedef sequence<KnowledgeCarrier> KnowledgeCarrierList;
struct CompositeStructType {
    string value;
};
typedef sequence<CompositeStructType> CompositeStructTypeList;
struct CompositeKnowledgeCarrier {
    ::org::omg::spec::api4kp::_20200801::services::CompositeStructType structtype;
    ::org::omg::spec::api4kp::_20200801::id::ResourceIdentifier rootid;
    sequence<::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier> _component;
    ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier _struct;
};
typedef sequence<CompositeKnowledgeCarrier> CompositeKnowledgeCarrierList;
module repository {
struct KnowledgeAssetCatalog {
    sequence<::org::omg::spec::api4kp::_20200801::id::KnowledgeAssetType> supportedassettypes;
    ::org::omg::spec::api4kp::_20200801::id::ResourceIdentifier id;
    sequence<::org::omg::spec::api4kp::_20200801::services::SyntacticRepresentation> surrogatemodels;
    string name;
    string owner;
    string supportedannotations;
};
typedef sequence<KnowledgeAssetCatalog> KnowledgeAssetCatalogList;
}; // repository
}; // services
module surrogate {
struct Publication {
    ::org::omg::spec::api4kp::_20200801::id::PublicationStatus publicationstatus;
    string createdon;
    string lastreviewedon;
    string issuedon;
};
typedef sequence<Publication> PublicationList;
struct Summary {
    ::org::omg::spec::api4kp::_20200801::id::SummarizationType rel;
    string text;
};
typedef sequence<Summary> SummaryList;
struct Citation {
    ::org::omg::spec::api4kp::_20200801::id::ConceptIdentifier rel;
    ::org::omg::spec::api4kp::_20200801::id::ConceptIdentifier bibliographyformat;
    string bibliography;
};
typedef sequence<Citation> CitationList;
struct Annotation {
    ::org::omg::spec::api4kp::_20200801::id::ConceptIdentifier rel;
    ::org::omg::spec::api4kp::_20200801::id::ConceptIdentifier ref;
};
typedef sequence<Annotation> AnnotationList;
struct Applicability {
    sequence<::org::omg::spec::api4kp::_20200801::id::ConceptIdentifier> situation;
    string description;
};
typedef sequence<Applicability> ApplicabilityList;
struct Link {
    string value;
};
typedef sequence<Link> LinkList;
struct KnowledgeArtifact {
    sequence<::org::omg::spec::api4kp::_20200801::id::Language> localization;
    ::org::omg::spec::api4kp::_20200801::id::ResourceIdentifier artifactid;
    ::org::omg::spec::api4kp::_20200801::id::KnowledgeArtifactCategory expressioncategory;
    sequence<::org::omg::spec::api4kp::_20200801::id::ResourceIdentifier> secondaryid;
    ::org::omg::spec::api4kp::_20200801::surrogate::Summary summary;
    sequence<::org::omg::spec::api4kp::_20200801::surrogate::Link> links;
    ::org::omg::spec::api4kp::_20200801::services::SyntacticRepresentation representation;
    ::org::omg::spec::api4kp::_20200801::surrogate::Publication lifecycle;
    string alternativetitle;
    string name;
    string description;
    string title;
    string seodescription;
    string mimetype;
    string inlinedexpression;
    string locator;
};
typedef sequence<KnowledgeArtifact> KnowledgeArtifactList;
struct KnowledgeAsset {
    sequence<::org::omg::spec::api4kp::_20200801::id::KnowledgeAssetType> formaltype;
    sequence<::org::omg::spec::api4kp::_20200801::id::KnowledgeAssetCategory> formalcategory;
    sequence<::org::omg::spec::api4kp::_20200801::id::KnowledgeProcessingTechnique> processingmethod;
    sequence<::org::omg::spec::api4kp::_20200801::id::KnowledgeAssetRole> role;
    ::org::omg::spec::api4kp::_20200801::id::ResourceIdentifier assetid;
    sequence<::org::omg::spec::api4kp::_20200801::id::ResourceIdentifier> secondaryid;
    sequence<::org::omg::spec::api4kp::_20200801::id::ResourceIdentifier> memberof;
    sequence<::org::omg::spec::api4kp::_20200801::surrogate::Annotation> annotation;
    sequence<::org::omg::spec::api4kp::_20200801::surrogate::KnowledgeArtifact> carriers;
    sequence<::org::omg::spec::api4kp::_20200801::surrogate::Citation> citations;
    ::org::omg::spec::api4kp::_20200801::surrogate::Applicability applicablein;
    sequence<::org::omg::spec::api4kp::_20200801::surrogate::KnowledgeArtifact> surrogate;
    sequence<::org::omg::spec::api4kp::_20200801::surrogate::Link> links;
    ::org::omg::spec::api4kp::_20200801::surrogate::Publication lifecycle;
    string name;
    string description;
    string seodescription;
};
typedef sequence<KnowledgeAsset> KnowledgeAssetList;
}; // surrogate
module api {
module repository {
module asset {
module v4 {
interface KnowledgeAssetCatalog {
  ::org::omg::spec::api4kp::_20200801::surrogate::KnowledgeAsset getKnowledgeAsset (
      in string xaccept , 
      in string assetid 
  );
  ::org::omg::spec::api4kp::_20200801::services::repository::KnowledgeAssetCatalog getKnowledgeAssetCatalog (
  );
  ::org::omg::spec::api4kp::_20200801::surrogate::KnowledgeAsset getKnowledgeAssetVersion (
      in string xaccept , 
      in string assetid , 
      in string versiontag 
  );
  ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier getKnowledgeGraph (
      in string xaccept 
  );
  string initKnowledgeAsset (
  );
  ::org::omg::spec::api4kp::_20200801::id::PointerList listKnowledgeAssetVersions (
      in long offset , 
      in string assetid , 
      in long limit , 
      in string aftertag , 
      in string sort , 
      in string beforetag 
  );
  ::org::omg::spec::api4kp::_20200801::id::PointerList listKnowledgeAssets (
      in long offset , 
      in long limit , 
      in string assettypetag , 
      in string assetannotationconcept , 
      in string assetannotationtag 
  );
  ::org::omg::spec::api4kp::_20200801::datatypes::BindingsList queryKnowledgeAssetGraph (
      in ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier graphquery 
  );
  void setKnowledgeAssetVersion (
      in string assetid , 
      in string versiontag , 
      in ::org::omg::spec::api4kp::_20200801::surrogate::KnowledgeAsset assetsurrogate 
  );
};
interface KnowledgeAssetRepository {
  void addCanonicalKnowledgeAssetSurrogate (
      in string assetid , 
      in string versiontag , 
      in ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier surrogatecarrier 
  );
  void addKnowledgeAssetCarrier (
      in ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier assetcarrier , 
      in string assetid , 
      in string versiontag 
  );
  void addKnowledgeAssetSurrogate (
      in string assetid , 
      in string versiontag , 
      in ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier surrogatecarrier 
  );
  ::org::omg::spec::api4kp::_20200801::services::CompositeKnowledgeCarrier getAnonymousCompositeKnowledgeAssetCarrier (
      in string xaccept , 
      in string assetid , 
      in string versiontag 
  );
  ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier getAnonymousCompositeKnowledgeAssetStructure (
      in string xaccept , 
      in string assetid , 
      in string versiontag 
  );
  ::org::omg::spec::api4kp::_20200801::services::CompositeKnowledgeCarrier getAnonymousCompositeKnowledgeAssetSurrogate (
      in string xaccept , 
      in string assetid , 
      in string versiontag 
  );
  ::org::omg::spec::api4kp::_20200801::services::CompositeKnowledgeCarrier getCompositeKnowledgeAssetCarrier (
      in string xaccept , 
      in string assetid , 
      in boolean flat , 
      in string versiontag 
  );
  ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier getCompositeKnowledgeAssetStructure (
      in string xaccept , 
      in string assetid , 
      in string versiontag 
  );
  ::org::omg::spec::api4kp::_20200801::services::CompositeKnowledgeCarrier getCompositeKnowledgeAssetSurrogate (
      in string xaccept , 
      in string assetid , 
      in boolean flat , 
      in string versiontag 
  );
  ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier getKnowledgeAssetCanonicalCarrier (
      in string xaccept , 
      in string assetid 
  );
  string getKnowledgeAssetCanonicalCarrierContent (
      in string xaccept , 
      in string assetid 
  );
  ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier getKnowledgeAssetCanonicalSurrogate (
      in string xaccept , 
      in string assetid 
  );
  ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier getKnowledgeAssetCarrier (
      in string xaccept , 
      in string assetid , 
      in string artifactid , 
      in string versiontag 
  );
  ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier getKnowledgeAssetCarrierVersion (
      in string xaccept , 
      in string assetid , 
      in string artifactversiontag , 
      in string artifactid , 
      in string versiontag 
  );
  string getKnowledgeAssetCarrierVersionContent (
      in string xaccept , 
      in string assetid , 
      in string artifactversiontag , 
      in string artifactid , 
      in string versiontag 
  );
  ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier getKnowledgeAssetSurrogateVersion (
      in string surrogateid , 
      in string xaccept , 
      in string assetid , 
      in string versiontag , 
      in string surrogateversiontag 
  );
  ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier getKnowledgeAssetVersionCanonicalCarrier (
      in string xaccept , 
      in string assetid , 
      in string versiontag 
  );
  string getKnowledgeAssetVersionCanonicalCarrierContent (
      in string xaccept , 
      in string assetid , 
      in string versiontag 
  );
  ::org::omg::spec::api4kp::_20200801::services::KnowledgeCarrier getKnowledgeAssetVersionCanonicalSurrogate (
      in string xaccept , 
      in string assetid , 
      in string versiontag 
  );
  ::org::omg::spec::api4kp::_20200801::id::PointerList listKnowledgeAssetCarrierVersions (
      in string assetid , 
      in string artifactid , 
      in string versiontag 
  );
  ::org::omg::spec::api4kp::_20200801::id::PointerList listKnowledgeAssetCarriers (
      in long offset , 
      in string assetid , 
      in long limit , 
      in string aftertag , 
      in string versiontag , 
      in string sort , 
      in string beforetag 
  );
  ::org::omg::spec::api4kp::_20200801::id::PointerList listKnowledgeAssetSurrogateVersions (
      in string surrogateid , 
      in long offset , 
      in string assetid , 
      in long limit , 
      in string aftertag , 
      in string versiontag , 
      in string sort , 
      in string beforetag 
  );
  ::org::omg::spec::api4kp::_20200801::id::PointerList listKnowledgeAssetSurrogates (
      in long offset , 
      in string assetid , 
      in long limit , 
      in string aftertag , 
      in string versiontag , 
      in string sort , 
      in string beforetag 
  );
  void setKnowledgeAssetCarrierVersion (
      in string assetid , 
      in string artifactversiontag , 
      in string exemplar , 
      in string artifactid , 
      in string versiontag 
  );
};
}; // v4
}; // asset
}; // repository
}; // api
}; // _20200801
}; // api4kp
}; // spec
}; // omg
}; // org