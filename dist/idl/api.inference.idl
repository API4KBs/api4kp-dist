#include "id.idl"
#include "datatypes.idl"
#include "services.idl"


module org {
module omg {
module spec {
module api4kp {
module 20210201 {

module api {
module inference {
   interface Model {
     services::KnowledgeCarrier getModel (
         in string modelid , 
         in string versiontag 
     );
     id::PointerList listModels (
     );
   };
   interface Reasoning {
     datatypes::BindingsList askQuery (
         in string modelid , 
         in services::KnowledgeCarrier query , 
         in string xparams , 
         in string versiontag 
     );
     boolean checkConsistency (
         in string modelid , 
         in string xparams , 
         in string versiontag 
     );
     boolean checkMembership (
         in string classid , 
         in string modelid , 
         in string xparams , 
         in string entityid , 
         in string versiontag 
     );
     datatypes::BindingsList checkSatisfiability (
         in string modelid , 
         in string xparams , 
         in string versiontag 
     );
     boolean checkSubsumption (
         in string classid , 
         in string modelid , 
         in string xparams , 
         in string entityid , 
         in string versiontag 
     );
     boolean entails (
         in services::KnowledgeCarrier potentialconsequence , 
         in string modelid , 
         in string xparams , 
         in string versiontag 
     );
     datatypes::Bindings evaluate (
         in datatypes::Bindings features , 
         in string modelid , 
         in string xparams , 
         in string versiontag 
     );
     services::KnowledgeCarrier infer (
         in datatypes::Bindings features , 
         in string modelid , 
         in string xparams , 
         in string versiontag 
     );
     id::PointerList listMembership (
         in datatypes::Bindings features , 
         in string modelid , 
         in string xparams , 
         in string entityid , 
         in string versiontag 
     );
     id::PointerList listSubsumptions (
         in string modelid , 
         in string xparams , 
         in string entityid , 
         in string versiontag 
     );
   };
}; // inference
}; // api
}; // 20210201
}; // api4kp
}; // spec
}; // omg
}; // org
